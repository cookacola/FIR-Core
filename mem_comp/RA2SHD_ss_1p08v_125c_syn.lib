/*
 *      CONFIDENTIAL  AND  PROPRIETARY SOFTWARE OF ARM Physical IP, INC.
 *      
 *      Copyright (c) 1993-2024  ARM Physical IP, Inc.  All  Rights Reserved.
 *      
 *      Use of this Software is subject to the terms and conditions  of the
 *      applicable license agreement with ARM Physical IP, Inc.  In addition,
 *      this Software is protected by patents, copyright law and international
 *      treaties.
 *      
 *      The copyright notice(s) in this Software does not indicate actual or
 *      intended publication of this Software.
 *      
 *      name:			High Speed/Density Dual Port SRAM Generator
 *           			IBM CMRF8SF-LPVT Process
 *      version:		2009Q1V1
 *      comment:		
 *      configuration:	 -instname RA2SHD -words 2048 -bits 32 -frequency 1 -ring_width 4.0 -mux 8 -write_mask off -wp_size 8 -top_layer "met5-8" -power_type rings -horiz met3 -vert met4 -cust_comment "" -bus_notation on -left_bus_delim "[" -right_bus_delim "]" -pwr_gnd_rename "VDD:VDD,GND:VSS" -prefix "" -pin_space 0.0 -name_case upper -check_instname on -diodes on -inside_ring_type GND -drive 6 -dpccm on -asvm on -libname USERLIB -corners ff_1p32v_m40c,ff_1p65v_125c,tt_1p2v_25c,ss_1p08v_125c
 *
 *      Synopsys model for Synchronous Dual-Port Ram
 *
 *      Library Name:   USERLIB
 *      Instance Name:  RA2SHD
 *      Words:          2048
 *      Word Width:     32
 *      Mux:            8
 *      Corner:        ss_1p08v_125c
 *
 *      Creation Date:  2024-11-23 20:02:25Z
 *      Version:        2009Q1V1
 *
 *      Verified With: Synopsys Design Compiler
 *
 *      Modeling Assumptions: This library contains a black box description
 *          for a memory element.  At the library level, a
 *          default_max_transition constraint is set to the maximum
 *          characterized input slew.  Each output has a max_capacitance
 *          constraint set to the highest characterized output load.  These two
 *          constraints force Design Compiler to synthesize circuits that
 *          operate within the characterization space.  The user can tighten
 *          these constraints, if desired.  When writing SDF from Design
 *          Compiler, use the version 2.1 option.  This ensures the SDF will
 *          annotate to simulation models provided with this generator.
 *
 *      Modeling Limitations: 
 *          Due to limitations of the .lib format, some data reduction was
 *          necessary.  When reducing data, minimum values were chosen for the
 *          fast case corner and maximum values were used for the typical and
 *          best case corners.  It is recommended that critical timing and
 *          setup and hold times be checked at all corners.
 *
 *      Known Bugs: None.
 *
 *      Known Work Arounds: N/A
 *
 */

library(USERLIB) {
	delay_model		: table_lookup;
	revision		: 1.1;	
	date			: "2024-11-23 20:02:25Z";
	comment			: "Confidential Information of ARM Physical IP, Inc.  Use subject to ARM Physical IP, Inc. license.  Copyright (c) 1993-2024 ARM Physical IP, Inc.";
	time_unit		: "1ns";
	voltage_unit		: "1V";
	current_unit		: "1mA";
	leakage_power_unit	: "1mW";
	nom_process		: 1;
	nom_temperature		: 125.000;
	nom_voltage		: 1.080;
	capacitive_load_unit	 (1,pf);

	pulling_resistance_unit	        : "1kohm";

	/* additional header data */
	default_cell_leakage_power      : 0;
	default_fanout_load		: 1;
	default_inout_pin_cap		: 0.005;
	default_input_pin_cap		: 0.005;
	default_output_pin_cap		: 0.0;
	default_max_transition		: 1.500;

        /* default attributes */
        default_leakage_power_density : 0.0;
        slew_derate_from_library      : 1.000;
        slew_lower_threshold_pct_fall : 10.000;
        slew_upper_threshold_pct_fall : 90.000;
        slew_lower_threshold_pct_rise : 10.000;
        slew_upper_threshold_pct_rise : 90.000;
        input_threshold_pct_fall      : 50.000;
        input_threshold_pct_rise      : 50.000;
        output_threshold_pct_fall     : 50.000;
        output_threshold_pct_rise     : 50.000;

 	/* k-factors */
 	k_process_cell_fall             : 1;
 	k_process_cell_leakage_power    : 0;
 	k_process_cell_rise             : 1;
 	k_process_fall_transition       : 1;
 	k_process_hold_fall             : 1;
 	k_process_hold_rise             : 1;
 	k_process_internal_power        : 0;
 	k_process_min_pulse_width_high  : 1;
 	k_process_min_pulse_width_low   : 1;
 	k_process_pin_cap               : 0;
 	k_process_recovery_fall         : 1;
 	k_process_recovery_rise         : 1;
 	k_process_rise_transition       : 1;
 	k_process_setup_fall            : 1;
 	k_process_setup_rise            : 1;
 	k_process_wire_cap              : 0;
 	k_process_wire_res              : 0;
	k_temp_cell_fall		: 0.000;
	k_temp_cell_rise		: 0.000;
	k_temp_hold_fall                : 0.000;
	k_temp_hold_rise                : 0.000;
	k_temp_min_pulse_width_high     : 0.000;
	k_temp_min_pulse_width_low      : 0.000;
	k_temp_min_period               : 0.000;
	k_temp_rise_propagation         : 0.000;
	k_temp_fall_propagation         : 0.000;
	k_temp_rise_transition          : 0.0;
	k_temp_fall_transition          : 0.0;
	k_temp_recovery_fall            : 0.000;
	k_temp_recovery_rise            : 0.000;
	k_temp_setup_fall               : 0.000;
	k_temp_setup_rise               : 0.000;
	k_volt_cell_fall                : 0.000;
	k_volt_cell_rise                : 0.000;
	k_volt_hold_fall                : 0.000;
	k_volt_hold_rise                : 0.000;
	k_volt_min_pulse_width_high     : 0.000;
	k_volt_min_pulse_width_low      : 0.000;
	k_volt_min_period               : 0.000;
	k_volt_rise_propagation         : 0.000;
	k_volt_fall_propagation         : 0.000;
	k_volt_rise_transition	        : 0.0;
	k_volt_fall_transition	        : 0.0;
	k_volt_recovery_fall            : 0.000;
	k_volt_recovery_rise            : 0.000;
	k_volt_setup_fall               : 0.000;
	k_volt_setup_rise               : 0.000;


        operating_conditions(ss_1p08v_125c) {
		process	 : 1;
		temperature	 : 125.000;
		voltage	 : 1.080;
		tree_type	 : balanced_tree;
	}
        default_operating_conditions : ss_1p08v_125c;
	wire_load("sample") {
		resistance	 : 1.6e-05;
		capacitance	 : 0.0002;
		area	 : 1.7;
  		slope	 : 500;
		fanout_length	 (1,500);
	}
        lu_table_template(RA2SHD_bist_mux_delay_template) {
           variable_1 : input_net_transition;
           variable_2 : total_output_net_capacitance;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
               index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
        lu_table_template(RA2SHD_mux_mem_out_delay_template) {
           variable_1 : input_net_transition;
           variable_2 : total_output_net_capacitance;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
               index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
        lu_table_template(RA2SHD_mem_out_delay_template) {
           variable_1 : input_net_transition;
           variable_2 : total_output_net_capacitance;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
               index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
	lu_table_template(RA2SHD_bist_mux_slew_template) {
           variable_1 : total_output_net_capacitance;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
	lu_table_template(RA2SHD_mem_out_slew_template) {
           variable_1 : total_output_net_capacitance;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
	lu_table_template(RA2SHD_clk_setup_constraint_template) {
           variable_1 : related_pin_transition;
           variable_2 : constrained_pin_transition;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
               index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
	lu_table_template(RA2SHD_constraint_template) {
           variable_1 : related_pin_transition;
           variable_2 : constrained_pin_transition;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
               index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
        power_lut_template(RA2SHD_energy_template_clkslew_load) {
           variable_1 : input_transition_time;
           variable_2 : total_output_net_capacitance;
               index_1 ("1000, 1001");
               index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
        power_lut_template(RA2SHD_energy_template_sigslew_load) {
           variable_1 : input_transition_time;
           variable_2 : total_output_net_capacitance;
               index_1 ("1000, 1001");
               index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
        power_lut_template(RA2SHD_energy_template_load) {
           variable_1 : total_output_net_capacitance;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
        power_lut_template(RA2SHD_energy_template_clkslew) {
           variable_1 : input_transition_time;
               index_1 ("1000, 1001");
        }
        power_lut_template(RA2SHD_energy_template_sigslew) {
           variable_1 : input_transition_time;
               index_1 ("1000, 1001");
        }
	library_features(report_delay_calculation);
	type (RA2SHD_DATA) {
		base_type : array ;
		data_type : bit ;
		bit_width : 32;
		bit_from : 31;
		bit_to : 0 ;
		downto : true ;
	}
	type (RA2SHD_UPM) {
		base_type : array ;
		data_type : bit ;
		bit_width : 3;
		bit_from : 2;
		bit_to : 0 ;
		downto : true ;
	}
	type (RA2SHD_ADDRESS) {
		base_type : array ;
		data_type : bit ;
		bit_width : 11;
		bit_from : 10;
		bit_to : 0 ;
		downto : true ;
	}
cell(RA2SHD) {
	area		 : 518678.995;
	dont_use	 : TRUE;
	dont_touch	 : TRUE;
        interface_timing : TRUE;
	memory() {
		type : ram;
		address_width : 11;
		word_width : 32;
	}
        bus(QA)   {
                bus_type : RA2SHD_DATA;
		direction : output;
		max_capacitance : 0.860;
                memory_read() {
			address : AA;
		}
                timing() {
                        related_pin :   "CLKA" ;
                        timing_type : rising_edge ;
                        timing_sense : non_unate;
                        cell_rise(RA2SHD_mem_out_delay_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.000, 0.030, 0.060, 0.120, 0.280, 0.560, 0.860");
                        values ( \
                          "8.549, 8.632, 8.716, 8.882, 9.326, 10.103, 10.935", \
                          "8.565, 8.648, 8.732, 8.898, 9.342, 10.119, 10.951", \
                          "8.585, 8.668, 8.751, 8.918, 9.362, 10.139, 10.971", \
                          "8.625, 8.708, 8.791, 8.958, 9.402, 10.178, 11.011", \
                          "8.744, 8.827, 8.910, 9.077, 9.521, 10.298, 11.130", \
                          "8.942, 9.026, 9.109, 9.275, 9.719, 10.496, 11.329", \
                          "9.141, 9.224, 9.308, 9.474, 9.918, 10.695, 11.527" \
                        )
                        }
                        rise_transition(RA2SHD_mem_out_slew_template) {
                        index_1 ("0.000, 0.030, 0.060, 0.120, 0.280, 0.560, 0.860");
                        values ("0.103, 0.260, 0.418, 0.734, 1.576, 3.049, 4.627")
                        }
                        cell_fall(RA2SHD_mem_out_delay_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.000, 0.030, 0.060, 0.120, 0.280, 0.560, 0.860");
                        values ( \
                          "8.731, 8.791, 8.851, 8.971, 9.290, 9.849, 10.447", \
                          "8.747, 8.807, 8.867, 8.987, 9.306, 9.865, 10.463", \
                          "8.767, 8.827, 8.887, 9.006, 9.326, 9.884, 10.483", \
                          "8.807, 8.867, 8.926, 9.046, 9.365, 9.924, 10.523", \
                          "8.926, 8.986, 9.046, 9.165, 9.485, 10.043, 10.642", \
                          "9.124, 9.184, 9.244, 9.364, 9.683, 10.242, 10.841", \
                          "9.323, 9.383, 9.443, 9.563, 9.882, 10.440, 11.039" \
                        )
                        }
                        fall_transition(RA2SHD_mem_out_slew_template) {
                        index_1 ("0.000, 0.030, 0.060, 0.120, 0.280, 0.560, 0.860");
                        values ("0.134, 0.248, 0.363, 0.591, 1.201, 2.268, 3.411")
                        }
                }
        }
        bus(QB)   {
                bus_type : RA2SHD_DATA;
		direction : output;
		max_capacitance : 0.860;
                memory_read() {
			address : AB;
		}
                timing() {
                        related_pin :   "CLKB" ;
                        timing_type : rising_edge ;
                        timing_sense : non_unate;
                        cell_rise(RA2SHD_mem_out_delay_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.000, 0.030, 0.060, 0.120, 0.280, 0.560, 0.860");
                        values ( \
                          "8.549, 8.632, 8.716, 8.882, 9.326, 10.103, 10.935", \
                          "8.565, 8.648, 8.732, 8.898, 9.342, 10.119, 10.951", \
                          "8.585, 8.668, 8.751, 8.918, 9.362, 10.139, 10.971", \
                          "8.625, 8.708, 8.791, 8.958, 9.402, 10.178, 11.011", \
                          "8.744, 8.827, 8.910, 9.077, 9.521, 10.298, 11.130", \
                          "8.942, 9.026, 9.109, 9.275, 9.719, 10.496, 11.329", \
                          "9.141, 9.224, 9.308, 9.474, 9.918, 10.695, 11.527" \
                        )
                        }
                        rise_transition(RA2SHD_mem_out_slew_template) {
                        index_1 ("0.000, 0.030, 0.060, 0.120, 0.280, 0.560, 0.860");
                        values ("0.103, 0.260, 0.418, 0.734, 1.576, 3.049, 4.627")
                        }
                        cell_fall(RA2SHD_mem_out_delay_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.000, 0.030, 0.060, 0.120, 0.280, 0.560, 0.860");
                        values ( \
                          "8.731, 8.791, 8.851, 8.971, 9.290, 9.849, 10.447", \
                          "8.747, 8.807, 8.867, 8.987, 9.306, 9.865, 10.463", \
                          "8.767, 8.827, 8.887, 9.006, 9.326, 9.884, 10.483", \
                          "8.807, 8.867, 8.926, 9.046, 9.365, 9.924, 10.523", \
                          "8.926, 8.986, 9.046, 9.165, 9.485, 10.043, 10.642", \
                          "9.124, 9.184, 9.244, 9.364, 9.683, 10.242, 10.841", \
                          "9.323, 9.383, 9.443, 9.563, 9.882, 10.440, 11.039" \
                        )
                        }
                        fall_transition(RA2SHD_mem_out_slew_template) {
                        index_1 ("0.000, 0.030, 0.060, 0.120, 0.280, 0.560, 0.860");
                        values ("0.134, 0.248, 0.363, 0.591, 1.201, 2.268, 3.411")
                        }
                }
        }
        pin(CLKA)   {
		direction : input;
		capacitance : 0.133;
                clock : true;
                max_transition : 1.500;
                timing() {
                        related_pin     : "CLKB" ;
                        timing_type     : setup_rising ;
                        rise_constraint(RA2SHD_clk_setup_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        values ( \
                          "6.864, 6.864, 6.864, 6.864, 6.864, 6.864, 6.864", \
                          "6.864, 6.864, 6.864, 6.864, 6.864, 6.864, 6.864", \
                          "6.864, 6.864, 6.864, 6.864, 6.864, 6.864, 6.864", \
                          "6.864, 6.864, 6.864, 6.864, 6.864, 6.864, 6.864", \
                          "6.864, 6.864, 6.864, 6.864, 6.864, 6.864, 6.864", \
                          "6.864, 6.864, 6.864, 6.864, 6.864, 6.864, 6.864", \
                          "6.864, 6.864, 6.864, 6.864, 6.864, 6.864, 6.864" \
                        )
                        }
                 }
                min_pulse_width_high : 0.422 ;
                min_pulse_width_low  : 0.700 ;
                min_period           : 8.581 ;


                internal_power(){
                        when : "(!CENA & ! \
                                 (WENA) \
                                ) \
                                 ";
                        rise_power(RA2SHD_energy_template_clkslew) {
                        index_1 ("0.000, 1.000");
                        values ("87.824, 87.824")
                        }
                        fall_power(RA2SHD_energy_template_clkslew) {
                        index_1 ("0.000, 1.000");
                        values ("0.000, 0.000")
                        }
                }
                internal_power(){
                        when : "(!CENA & \
                                 (WENA) \
                                ) \
                                 ";
                        rise_power(RA2SHD_energy_template_clkslew) {
                        index_1 ("0.000, 1.000");
                        values ("60.342, 60.342")
                        }
                        fall_power(RA2SHD_energy_template_clkslew) {
                        index_1 ("0.000, 1.000");
                        values ("0.000, 0.000")
                        }
                }
         internal_power(){
                 when : "(CENA)";
                        rise_power(RA2SHD_energy_template_clkslew) {
                        index_1 ("0.000, 1.000");
                        values ("0.018, 0.018")
                        }
                        fall_power(RA2SHD_energy_template_clkslew) {
                        index_1 ("0.000, 1.000");
                        values ("0.000, 0.000")
                        }
                }
        }

        pin(CENA)   {
                direction : input;
                capacitance : 0.008;
                timing() {
                        related_pin     : CLKA;
                        timing_type     : setup_rising ;
                        rise_constraint(RA2SHD_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        values ( \
                          "2.140, 2.156, 2.176, 2.216, 2.335, 2.534, 2.733", \
                          "2.124, 2.140, 2.160, 2.200, 2.319, 2.518, 2.718", \
                          "2.104, 2.120, 2.140, 2.180, 2.300, 2.499, 2.698", \
                          "2.065, 2.081, 2.101, 2.140, 2.260, 2.459, 2.658", \
                          "1.945, 1.961, 1.981, 2.021, 2.141, 2.340, 2.539", \
                          "1.747, 1.763, 1.783, 1.823, 1.942, 2.141, 2.340", \
                          "1.548, 1.564, 1.584, 1.624, 1.743, 1.943, 2.142" \
                        )
                        }
                        fall_constraint(RA2SHD_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        values ( \
                          "1.866, 1.879, 1.895, 1.927, 2.022, 2.182, 2.341", \
                          "1.851, 1.863, 1.879, 1.911, 2.007, 2.166, 2.325", \
                          "1.831, 1.843, 1.859, 1.891, 1.987, 2.146, 2.305", \
                          "1.791, 1.804, 1.820, 1.851, 1.947, 2.106, 2.265", \
                          "1.672, 1.685, 1.700, 1.732, 1.828, 1.987, 2.146", \
                          "1.473, 1.486, 1.502, 1.534, 1.629, 1.788, 1.947", \
                          "1.275, 1.287, 1.303, 1.335, 1.431, 1.590, 1.749" \
                        )
                        }
                } 
                timing() {
                        related_pin     : CLKA;
                        timing_type     : hold_rising ;
                        rise_constraint(RA2SHD_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        values ( \
                          "0.500, 0.500, 0.500, 0.500, 0.500, 0.500, 0.500", \
                          "0.500, 0.500, 0.500, 0.500, 0.500, 0.500, 0.500", \
                          "0.500, 0.500, 0.500, 0.500, 0.500, 0.500, 0.500", \
                          "0.500, 0.500, 0.500, 0.500, 0.500, 0.500, 0.500", \
                          "0.500, 0.500, 0.500, 0.500, 0.500, 0.500, 0.500", \
                          "0.500, 0.500, 0.500, 0.500, 0.500, 0.500, 0.500", \
                          "0.617, 0.601, 0.582, 0.542, 0.500, 0.500, 0.500" \
                        )
                        }
                        fall_constraint(RA2SHD_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        values ( \
                          "0.500, 0.500, 0.500, 0.500, 0.500, 0.500, 0.500", \
                          "0.500, 0.500, 0.500, 0.500, 0.500, 0.500, 0.500", \
                          "0.500, 0.500, 0.500, 0.500, 0.500, 0.500, 0.500", \
                          "0.500, 0.500, 0.500, 0.500, 0.500, 0.500, 0.500", \
                          "0.500, 0.500, 0.500, 0.500, 0.500, 0.500, 0.500", \
                          "0.500, 0.500, 0.500, 0.500, 0.500, 0.500, 0.500", \
                          "0.500, 0.500, 0.500, 0.500, 0.500, 0.500, 0.500" \
                        )
                        }
               }
        }
        pin(WENA){
                direction : input;
                capacitance : 0.008;
                timing() {
                        related_pin     : CLKA;
                        timing_type     : setup_rising ;
                        rise_constraint(RA2SHD_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        values ( \
                          "2.356, 2.373, 2.394, 2.437, 2.565, 2.779, 2.992", \
                          "2.340, 2.357, 2.378, 2.421, 2.549, 2.763, 2.976", \
                          "2.320, 2.337, 2.359, 2.401, 2.529, 2.743, 2.956", \
                          "2.280, 2.298, 2.319, 2.362, 2.490, 2.703, 2.916", \
                          "2.161, 2.178, 2.200, 2.242, 2.370, 2.584, 2.797", \
                          "1.963, 1.980, 2.001, 2.044, 2.172, 2.385, 2.599", \
                          "1.764, 1.781, 1.802, 1.845, 1.973, 2.187, 2.400" \
                        )
                        }
                        fall_constraint(RA2SHD_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        values ( \
                          "2.387, 2.400, 2.417, 2.451, 2.551, 2.718, 2.886", \
                          "2.371, 2.384, 2.401, 2.435, 2.535, 2.703, 2.870", \
                          "2.351, 2.365, 2.381, 2.415, 2.515, 2.683, 2.850", \
                          "2.311, 2.325, 2.342, 2.375, 2.476, 2.643, 2.810", \
                          "2.192, 2.206, 2.222, 2.256, 2.356, 2.524, 2.691", \
                          "1.994, 2.007, 2.024, 2.057, 2.158, 2.325, 2.493", \
                          "1.795, 1.808, 1.825, 1.859, 1.959, 2.127, 2.294" \
                        )
                        }
                } 
                timing() {
                        related_pin     : CLKA;
                        timing_type     : hold_rising ;
                        rise_constraint(RA2SHD_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        values ( \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630", \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630", \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630", \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630", \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630", \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630", \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630" \
                        )
                        }
                        fall_constraint(RA2SHD_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        values ( \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630", \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630", \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630", \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630", \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630", \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630", \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630" \
                        )
                        }
               }
        }
        bus(AA)   {
                bus_type : RA2SHD_ADDRESS;
                direction : input;
                capacitance : 0.017;
                timing() {
                        related_pin     : CLKA;
                        timing_type     : setup_rising ;
                        rise_constraint(RA2SHD_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        values ( \
                          "1.903, 1.915, 1.930, 1.960, 2.050, 2.200, 2.350", \
                          "1.887, 1.899, 1.914, 1.944, 2.034, 2.184, 2.334", \
                          "1.867, 1.879, 1.894, 1.924, 2.014, 2.164, 2.314", \
                          "1.827, 1.839, 1.854, 1.884, 1.974, 2.124, 2.274", \
                          "1.708, 1.720, 1.735, 1.765, 1.855, 2.005, 2.155", \
                          "1.509, 1.521, 1.536, 1.566, 1.656, 1.807, 1.957", \
                          "1.311, 1.323, 1.338, 1.368, 1.458, 1.608, 1.758" \
                        )
                        }
                        fall_constraint(RA2SHD_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        values ( \
                          "0.974, 0.985, 0.999, 1.027, 1.111, 1.251, 1.392", \
                          "0.958, 0.969, 0.983, 1.011, 1.095, 1.236, 1.376", \
                          "0.938, 0.949, 0.963, 0.991, 1.075, 1.216, 1.356", \
                          "0.898, 0.910, 0.924, 0.952, 1.036, 1.176, 1.316", \
                          "0.779, 0.790, 0.804, 0.832, 0.917, 1.057, 1.197", \
                          "0.581, 0.592, 0.606, 0.634, 0.718, 0.858, 0.998", \
                          "0.382, 0.393, 0.407, 0.435, 0.519, 0.660, 0.800" \
                        )
                        }
                } 
                timing() {
                        related_pin     : CLKA;
                        timing_type     : hold_rising ;
                        rise_constraint(RA2SHD_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        values ( \
                          "0.230, 0.230, 0.230, 0.230, 0.230, 0.230, 0.230", \
                          "0.230, 0.230, 0.230, 0.230, 0.230, 0.230, 0.230", \
                          "0.230, 0.230, 0.230, 0.230, 0.230, 0.230, 0.230", \
                          "0.230, 0.230, 0.230, 0.230, 0.230, 0.230, 0.230", \
                          "0.230, 0.230, 0.230, 0.230, 0.230, 0.230, 0.230", \
                          "0.231, 0.230, 0.230, 0.230, 0.230, 0.230, 0.230", \
                          "0.430, 0.418, 0.403, 0.373, 0.283, 0.230, 0.230" \
                        )
                        }
                        fall_constraint(RA2SHD_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        values ( \
                          "0.230, 0.230, 0.230, 0.230, 0.230, 0.230, 0.230", \
                          "0.230, 0.230, 0.230, 0.230, 0.230, 0.230, 0.230", \
                          "0.230, 0.230, 0.230, 0.230, 0.230, 0.230, 0.230", \
                          "0.230, 0.230, 0.230, 0.230, 0.230, 0.230, 0.230", \
                          "0.293, 0.282, 0.268, 0.240, 0.230, 0.230, 0.230", \
                          "0.492, 0.480, 0.466, 0.438, 0.354, 0.230, 0.230", \
                          "0.690, 0.679, 0.665, 0.637, 0.553, 0.413, 0.272" \
                        )
                        }
               }
                internal_power(){
                        when : "CENA";
                        rise_power(RA2SHD_energy_template_sigslew) {
                        index_1 ("0.000, 1.000");
                        values ("0.459, 0.459")
                        }
                        fall_power(RA2SHD_energy_template_sigslew) {
                        index_1 ("0.000, 1.000");
                        values ("0.459, 0.459")
                        }
                }
        }
        bus(DA)   {
                bus_type : RA2SHD_DATA;
                memory_write() {
                        address : AA;
                        clocked_on : "CLKA";
                }
                direction : input;
                capacitance : 0.001;
                timing() {
                        related_pin     : CLKA;
                        timing_type     : setup_rising ;
                        rise_constraint(RA2SHD_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        values ( \
                          "1.574, 1.587, 1.604, 1.637, 1.736, 1.902, 2.067", \
                          "1.558, 1.571, 1.588, 1.621, 1.720, 1.886, 2.051", \
                          "1.538, 1.552, 1.568, 1.601, 1.700, 1.866, 2.031", \
                          "1.499, 1.512, 1.528, 1.561, 1.661, 1.826, 1.992", \
                          "1.379, 1.393, 1.409, 1.442, 1.542, 1.707, 1.872", \
                          "1.181, 1.194, 1.211, 1.244, 1.343, 1.508, 1.674", \
                          "0.982, 0.995, 1.012, 1.045, 1.144, 1.310, 1.475" \
                        )
                        }
                        fall_constraint(RA2SHD_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        values ( \
                          "1.707, 1.722, 1.740, 1.777, 1.887, 2.070, 2.254", \
                          "1.691, 1.706, 1.724, 1.761, 1.871, 2.055, 2.238", \
                          "1.671, 1.686, 1.704, 1.741, 1.851, 2.035, 2.218", \
                          "1.632, 1.646, 1.665, 1.701, 1.811, 1.995, 2.178", \
                          "1.512, 1.527, 1.546, 1.582, 1.692, 1.876, 2.059", \
                          "1.314, 1.329, 1.347, 1.384, 1.494, 1.677, 1.861", \
                          "1.115, 1.130, 1.148, 1.185, 1.295, 1.479, 1.662" \
                        )
                        }
                } 
                timing() {
                        related_pin     : CLKA;
                        timing_type     : hold_rising ;
                        rise_constraint(RA2SHD_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        values ( \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630", \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630", \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630", \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630", \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630", \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630", \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630" \
                        )
                        }
                        fall_constraint(RA2SHD_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        values ( \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630", \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630", \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630", \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630", \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630", \
                          "0.774, 0.759, 0.741, 0.704, 0.630, 0.630, 0.630", \
                          "0.972, 0.958, 0.939, 0.903, 0.793, 0.630, 0.630" \
                        )
                        }
               }
        }
        pin(CLKB)   {
		direction : input;
		capacitance : 0.133;
                clock : true;
                max_transition : 1.500;
                timing() {
                        related_pin     : "CLKA" ;
                        timing_type     : setup_rising ;
                        rise_constraint(RA2SHD_clk_setup_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        values ( \
                          "6.864, 6.864, 6.864, 6.864, 6.864, 6.864, 6.864", \
                          "6.864, 6.864, 6.864, 6.864, 6.864, 6.864, 6.864", \
                          "6.864, 6.864, 6.864, 6.864, 6.864, 6.864, 6.864", \
                          "6.864, 6.864, 6.864, 6.864, 6.864, 6.864, 6.864", \
                          "6.864, 6.864, 6.864, 6.864, 6.864, 6.864, 6.864", \
                          "6.864, 6.864, 6.864, 6.864, 6.864, 6.864, 6.864", \
                          "6.864, 6.864, 6.864, 6.864, 6.864, 6.864, 6.864" \
                        )
                        }
                 }
                min_pulse_width_high : 0.422 ;
                min_pulse_width_low  : 0.700 ;
                min_period           : 8.581 ;


                internal_power(){
                        when : "(!CENB & ! \
                                 (WENB) \
                                ) \
                                 ";
                        rise_power(RA2SHD_energy_template_clkslew) {
                        index_1 ("0.000, 1.000");
                        values ("87.824, 87.824")
                        }
                        fall_power(RA2SHD_energy_template_clkslew) {
                        index_1 ("0.000, 1.000");
                        values ("0.000, 0.000")
                        }
                }
                internal_power(){
                        when : "(!CENB & \
                                 (WENB) \
                                ) \
                                 ";
                        rise_power(RA2SHD_energy_template_clkslew) {
                        index_1 ("0.000, 1.000");
                        values ("60.342, 60.342")
                        }
                        fall_power(RA2SHD_energy_template_clkslew) {
                        index_1 ("0.000, 1.000");
                        values ("0.000, 0.000")
                        }
                }
         internal_power(){
                 when : "(CENB)";
                        rise_power(RA2SHD_energy_template_clkslew) {
                        index_1 ("0.000, 1.000");
                        values ("0.018, 0.018")
                        }
                        fall_power(RA2SHD_energy_template_clkslew) {
                        index_1 ("0.000, 1.000");
                        values ("0.000, 0.000")
                        }
                }
        }

        pin(CENB)   {
                direction : input;
                capacitance : 0.008;
                timing() {
                        related_pin     : CLKB;
                        timing_type     : setup_rising ;
                        rise_constraint(RA2SHD_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        values ( \
                          "2.140, 2.156, 2.176, 2.216, 2.335, 2.534, 2.733", \
                          "2.124, 2.140, 2.160, 2.200, 2.319, 2.518, 2.718", \
                          "2.104, 2.120, 2.140, 2.180, 2.300, 2.499, 2.698", \
                          "2.065, 2.081, 2.101, 2.140, 2.260, 2.459, 2.658", \
                          "1.945, 1.961, 1.981, 2.021, 2.141, 2.340, 2.539", \
                          "1.747, 1.763, 1.783, 1.823, 1.942, 2.141, 2.340", \
                          "1.548, 1.564, 1.584, 1.624, 1.743, 1.943, 2.142" \
                        )
                        }
                        fall_constraint(RA2SHD_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        values ( \
                          "1.866, 1.879, 1.895, 1.927, 2.022, 2.182, 2.341", \
                          "1.851, 1.863, 1.879, 1.911, 2.007, 2.166, 2.325", \
                          "1.831, 1.843, 1.859, 1.891, 1.987, 2.146, 2.305", \
                          "1.791, 1.804, 1.820, 1.851, 1.947, 2.106, 2.265", \
                          "1.672, 1.685, 1.700, 1.732, 1.828, 1.987, 2.146", \
                          "1.473, 1.486, 1.502, 1.534, 1.629, 1.788, 1.947", \
                          "1.275, 1.287, 1.303, 1.335, 1.431, 1.590, 1.749" \
                        )
                        }
                } 
                timing() {
                        related_pin     : CLKB;
                        timing_type     : hold_rising ;
                        rise_constraint(RA2SHD_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        values ( \
                          "0.500, 0.500, 0.500, 0.500, 0.500, 0.500, 0.500", \
                          "0.500, 0.500, 0.500, 0.500, 0.500, 0.500, 0.500", \
                          "0.500, 0.500, 0.500, 0.500, 0.500, 0.500, 0.500", \
                          "0.500, 0.500, 0.500, 0.500, 0.500, 0.500, 0.500", \
                          "0.500, 0.500, 0.500, 0.500, 0.500, 0.500, 0.500", \
                          "0.500, 0.500, 0.500, 0.500, 0.500, 0.500, 0.500", \
                          "0.617, 0.601, 0.582, 0.542, 0.500, 0.500, 0.500" \
                        )
                        }
                        fall_constraint(RA2SHD_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        values ( \
                          "0.500, 0.500, 0.500, 0.500, 0.500, 0.500, 0.500", \
                          "0.500, 0.500, 0.500, 0.500, 0.500, 0.500, 0.500", \
                          "0.500, 0.500, 0.500, 0.500, 0.500, 0.500, 0.500", \
                          "0.500, 0.500, 0.500, 0.500, 0.500, 0.500, 0.500", \
                          "0.500, 0.500, 0.500, 0.500, 0.500, 0.500, 0.500", \
                          "0.500, 0.500, 0.500, 0.500, 0.500, 0.500, 0.500", \
                          "0.500, 0.500, 0.500, 0.500, 0.500, 0.500, 0.500" \
                        )
                        }
               }
        }
        pin(WENB){
                direction : input;
                capacitance : 0.008;
                timing() {
                        related_pin     : CLKB;
                        timing_type     : setup_rising ;
                        rise_constraint(RA2SHD_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        values ( \
                          "2.356, 2.373, 2.394, 2.437, 2.565, 2.779, 2.992", \
                          "2.340, 2.357, 2.378, 2.421, 2.549, 2.763, 2.976", \
                          "2.320, 2.337, 2.359, 2.401, 2.529, 2.743, 2.956", \
                          "2.280, 2.298, 2.319, 2.362, 2.490, 2.703, 2.916", \
                          "2.161, 2.178, 2.200, 2.242, 2.370, 2.584, 2.797", \
                          "1.963, 1.980, 2.001, 2.044, 2.172, 2.385, 2.599", \
                          "1.764, 1.781, 1.802, 1.845, 1.973, 2.187, 2.400" \
                        )
                        }
                        fall_constraint(RA2SHD_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        values ( \
                          "2.387, 2.400, 2.417, 2.451, 2.551, 2.718, 2.886", \
                          "2.371, 2.384, 2.401, 2.435, 2.535, 2.703, 2.870", \
                          "2.351, 2.365, 2.381, 2.415, 2.515, 2.683, 2.850", \
                          "2.311, 2.325, 2.342, 2.375, 2.476, 2.643, 2.810", \
                          "2.192, 2.206, 2.222, 2.256, 2.356, 2.524, 2.691", \
                          "1.994, 2.007, 2.024, 2.057, 2.158, 2.325, 2.493", \
                          "1.795, 1.808, 1.825, 1.859, 1.959, 2.127, 2.294" \
                        )
                        }
                } 
                timing() {
                        related_pin     : CLKB;
                        timing_type     : hold_rising ;
                        rise_constraint(RA2SHD_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        values ( \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630", \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630", \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630", \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630", \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630", \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630", \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630" \
                        )
                        }
                        fall_constraint(RA2SHD_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        values ( \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630", \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630", \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630", \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630", \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630", \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630", \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630" \
                        )
                        }
               }
        }
        bus(AB)   {
                bus_type : RA2SHD_ADDRESS;
                direction : input;
                capacitance : 0.017;
                timing() {
                        related_pin     : CLKB;
                        timing_type     : setup_rising ;
                        rise_constraint(RA2SHD_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        values ( \
                          "1.903, 1.915, 1.930, 1.960, 2.050, 2.200, 2.350", \
                          "1.887, 1.899, 1.914, 1.944, 2.034, 2.184, 2.334", \
                          "1.867, 1.879, 1.894, 1.924, 2.014, 2.164, 2.314", \
                          "1.827, 1.839, 1.854, 1.884, 1.974, 2.124, 2.274", \
                          "1.708, 1.720, 1.735, 1.765, 1.855, 2.005, 2.155", \
                          "1.509, 1.521, 1.536, 1.566, 1.656, 1.807, 1.957", \
                          "1.311, 1.323, 1.338, 1.368, 1.458, 1.608, 1.758" \
                        )
                        }
                        fall_constraint(RA2SHD_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        values ( \
                          "0.974, 0.985, 0.999, 1.027, 1.111, 1.251, 1.392", \
                          "0.958, 0.969, 0.983, 1.011, 1.095, 1.236, 1.376", \
                          "0.938, 0.949, 0.963, 0.991, 1.075, 1.216, 1.356", \
                          "0.898, 0.910, 0.924, 0.952, 1.036, 1.176, 1.316", \
                          "0.779, 0.790, 0.804, 0.832, 0.917, 1.057, 1.197", \
                          "0.581, 0.592, 0.606, 0.634, 0.718, 0.858, 0.998", \
                          "0.382, 0.393, 0.407, 0.435, 0.519, 0.660, 0.800" \
                        )
                        }
                } 
                timing() {
                        related_pin     : CLKB;
                        timing_type     : hold_rising ;
                        rise_constraint(RA2SHD_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        values ( \
                          "0.230, 0.230, 0.230, 0.230, 0.230, 0.230, 0.230", \
                          "0.230, 0.230, 0.230, 0.230, 0.230, 0.230, 0.230", \
                          "0.230, 0.230, 0.230, 0.230, 0.230, 0.230, 0.230", \
                          "0.230, 0.230, 0.230, 0.230, 0.230, 0.230, 0.230", \
                          "0.230, 0.230, 0.230, 0.230, 0.230, 0.230, 0.230", \
                          "0.231, 0.230, 0.230, 0.230, 0.230, 0.230, 0.230", \
                          "0.430, 0.418, 0.403, 0.373, 0.283, 0.230, 0.230" \
                        )
                        }
                        fall_constraint(RA2SHD_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        values ( \
                          "0.230, 0.230, 0.230, 0.230, 0.230, 0.230, 0.230", \
                          "0.230, 0.230, 0.230, 0.230, 0.230, 0.230, 0.230", \
                          "0.230, 0.230, 0.230, 0.230, 0.230, 0.230, 0.230", \
                          "0.230, 0.230, 0.230, 0.230, 0.230, 0.230, 0.230", \
                          "0.293, 0.282, 0.268, 0.240, 0.230, 0.230, 0.230", \
                          "0.492, 0.480, 0.466, 0.438, 0.354, 0.230, 0.230", \
                          "0.690, 0.679, 0.665, 0.637, 0.553, 0.413, 0.272" \
                        )
                        }
               }
                internal_power(){
                        when : "CENB";
                        rise_power(RA2SHD_energy_template_sigslew) {
                        index_1 ("0.000, 1.000");
                        values ("0.459, 0.459")
                        }
                        fall_power(RA2SHD_energy_template_sigslew) {
                        index_1 ("0.000, 1.000");
                        values ("0.459, 0.459")
                        }
                }
        }
        bus(DB)   {
                bus_type : RA2SHD_DATA;
                memory_write() {
                        address : AB;
                        clocked_on : "CLKB";
                }
                direction : input;
                capacitance : 0.001;
                timing() {
                        related_pin     : CLKB;
                        timing_type     : setup_rising ;
                        rise_constraint(RA2SHD_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        values ( \
                          "1.574, 1.587, 1.604, 1.637, 1.736, 1.902, 2.067", \
                          "1.558, 1.571, 1.588, 1.621, 1.720, 1.886, 2.051", \
                          "1.538, 1.552, 1.568, 1.601, 1.700, 1.866, 2.031", \
                          "1.499, 1.512, 1.528, 1.561, 1.661, 1.826, 1.992", \
                          "1.379, 1.393, 1.409, 1.442, 1.542, 1.707, 1.872", \
                          "1.181, 1.194, 1.211, 1.244, 1.343, 1.508, 1.674", \
                          "0.982, 0.995, 1.012, 1.045, 1.144, 1.310, 1.475" \
                        )
                        }
                        fall_constraint(RA2SHD_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        values ( \
                          "1.707, 1.722, 1.740, 1.777, 1.887, 2.070, 2.254", \
                          "1.691, 1.706, 1.724, 1.761, 1.871, 2.055, 2.238", \
                          "1.671, 1.686, 1.704, 1.741, 1.851, 2.035, 2.218", \
                          "1.632, 1.646, 1.665, 1.701, 1.811, 1.995, 2.178", \
                          "1.512, 1.527, 1.546, 1.582, 1.692, 1.876, 2.059", \
                          "1.314, 1.329, 1.347, 1.384, 1.494, 1.677, 1.861", \
                          "1.115, 1.130, 1.148, 1.185, 1.295, 1.479, 1.662" \
                        )
                        }
                } 
                timing() {
                        related_pin     : CLKB;
                        timing_type     : hold_rising ;
                        rise_constraint(RA2SHD_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        values ( \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630", \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630", \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630", \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630", \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630", \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630", \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630" \
                        )
                        }
                        fall_constraint(RA2SHD_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        values ( \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630", \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630", \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630", \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630", \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630", \
                          "0.774, 0.759, 0.741, 0.704, 0.630, 0.630, 0.630", \
                          "0.972, 0.958, 0.939, 0.903, 0.793, 0.630, 0.630" \
                        )
                        }
               }
        }

        cell_leakage_power : 2.86E-2;
}
}
