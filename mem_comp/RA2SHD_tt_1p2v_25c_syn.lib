/*
 *      CONFIDENTIAL  AND  PROPRIETARY SOFTWARE OF ARM Physical IP, INC.
 *      
 *      Copyright (c) 1993-2024  ARM Physical IP, Inc.  All  Rights Reserved.
 *      
 *      Use of this Software is subject to the terms and conditions  of the
 *      applicable license agreement with ARM Physical IP, Inc.  In addition,
 *      this Software is protected by patents, copyright law and international
 *      treaties.
 *      
 *      The copyright notice(s) in this Software does not indicate actual or
 *      intended publication of this Software.
 *      
 *      name:			High Speed/Density Dual Port SRAM Generator
 *           			IBM CMRF8SF-LPVT Process
 *      version:		2009Q1V1
 *      comment:		
 *      configuration:	 -instname RA2SHD -words 2048 -bits 32 -frequency 1 -ring_width 4.0 -mux 8 -write_mask off -wp_size 8 -top_layer "met5-8" -power_type rings -horiz met3 -vert met4 -cust_comment "" -bus_notation on -left_bus_delim "[" -right_bus_delim "]" -pwr_gnd_rename "VDD:VDD,GND:VSS" -prefix "" -pin_space 0.0 -name_case upper -check_instname on -diodes on -inside_ring_type GND -drive 6 -dpccm on -asvm on -libname USERLIB -corners ff_1p32v_m40c,ff_1p65v_125c,tt_1p2v_25c,ss_1p08v_125c
 *
 *      Synopsys model for Synchronous Dual-Port Ram
 *
 *      Library Name:   USERLIB
 *      Instance Name:  RA2SHD
 *      Words:          2048
 *      Word Width:     32
 *      Mux:            8
 *      Corner:        tt_1p2v_25c
 *
 *      Creation Date:  2024-11-23 20:02:24Z
 *      Version:        2009Q1V1
 *
 *      Verified With: Synopsys Design Compiler
 *
 *      Modeling Assumptions: This library contains a black box description
 *          for a memory element.  At the library level, a
 *          default_max_transition constraint is set to the maximum
 *          characterized input slew.  Each output has a max_capacitance
 *          constraint set to the highest characterized output load.  These two
 *          constraints force Design Compiler to synthesize circuits that
 *          operate within the characterization space.  The user can tighten
 *          these constraints, if desired.  When writing SDF from Design
 *          Compiler, use the version 2.1 option.  This ensures the SDF will
 *          annotate to simulation models provided with this generator.
 *
 *      Modeling Limitations: 
 *          Due to limitations of the .lib format, some data reduction was
 *          necessary.  When reducing data, minimum values were chosen for the
 *          fast case corner and maximum values were used for the typical and
 *          best case corners.  It is recommended that critical timing and
 *          setup and hold times be checked at all corners.
 *
 *      Known Bugs: None.
 *
 *      Known Work Arounds: N/A
 *
 */

library(USERLIB) {
	delay_model		: table_lookup;
	revision		: 1.1;	
	date			: "2024-11-23 20:02:24Z";
	comment			: "Confidential Information of ARM Physical IP, Inc.  Use subject to ARM Physical IP, Inc. license.  Copyright (c) 1993-2024 ARM Physical IP, Inc.";
	time_unit		: "1ns";
	voltage_unit		: "1V";
	current_unit		: "1mA";
	leakage_power_unit	: "1mW";
	nom_process		: 1;
	nom_temperature		: 25.000;
	nom_voltage		: 1.200;
	capacitive_load_unit	 (1,pf);

	pulling_resistance_unit	        : "1kohm";

	/* additional header data */
	default_cell_leakage_power      : 0;
	default_fanout_load		: 1;
	default_inout_pin_cap		: 0.005;
	default_input_pin_cap		: 0.005;
	default_output_pin_cap		: 0.0;
	default_max_transition		: 1.000;

        /* default attributes */
        default_leakage_power_density : 0.0;
        slew_derate_from_library      : 1.000;
        slew_lower_threshold_pct_fall : 10.000;
        slew_upper_threshold_pct_fall : 90.000;
        slew_lower_threshold_pct_rise : 10.000;
        slew_upper_threshold_pct_rise : 90.000;
        input_threshold_pct_fall      : 50.000;
        input_threshold_pct_rise      : 50.000;
        output_threshold_pct_fall     : 50.000;
        output_threshold_pct_rise     : 50.000;

 	/* k-factors */
 	k_process_cell_fall             : 1;
 	k_process_cell_leakage_power    : 0;
 	k_process_cell_rise             : 1;
 	k_process_fall_transition       : 1;
 	k_process_hold_fall             : 1;
 	k_process_hold_rise             : 1;
 	k_process_internal_power        : 0;
 	k_process_min_pulse_width_high  : 1;
 	k_process_min_pulse_width_low   : 1;
 	k_process_pin_cap               : 0;
 	k_process_recovery_fall         : 1;
 	k_process_recovery_rise         : 1;
 	k_process_rise_transition       : 1;
 	k_process_setup_fall            : 1;
 	k_process_setup_rise            : 1;
 	k_process_wire_cap              : 0;
 	k_process_wire_res              : 0;
	k_temp_cell_fall		: 0.000;
	k_temp_cell_rise		: 0.000;
	k_temp_hold_fall                : 0.000;
	k_temp_hold_rise                : 0.000;
	k_temp_min_pulse_width_high     : 0.000;
	k_temp_min_pulse_width_low      : 0.000;
	k_temp_min_period               : 0.000;
	k_temp_rise_propagation         : 0.000;
	k_temp_fall_propagation         : 0.000;
	k_temp_rise_transition          : 0.0;
	k_temp_fall_transition          : 0.0;
	k_temp_recovery_fall            : 0.000;
	k_temp_recovery_rise            : 0.000;
	k_temp_setup_fall               : 0.000;
	k_temp_setup_rise               : 0.000;
	k_volt_cell_fall                : 0.000;
	k_volt_cell_rise                : 0.000;
	k_volt_hold_fall                : 0.000;
	k_volt_hold_rise                : 0.000;
	k_volt_min_pulse_width_high     : 0.000;
	k_volt_min_pulse_width_low      : 0.000;
	k_volt_min_period               : 0.000;
	k_volt_rise_propagation         : 0.000;
	k_volt_fall_propagation         : 0.000;
	k_volt_rise_transition	        : 0.0;
	k_volt_fall_transition	        : 0.0;
	k_volt_recovery_fall            : 0.000;
	k_volt_recovery_rise            : 0.000;
	k_volt_setup_fall               : 0.000;
	k_volt_setup_rise               : 0.000;


        operating_conditions(tt_1p2v_25c) {
		process	 : 1;
		temperature	 : 25.000;
		voltage	 : 1.200;
		tree_type	 : balanced_tree;
	}
        default_operating_conditions : tt_1p2v_25c;
	wire_load("sample") {
		resistance	 : 1.6e-05;
		capacitance	 : 0.0002;
		area	 : 1.7;
  		slope	 : 500;
		fanout_length	 (1,500);
	}
        lu_table_template(RA2SHD_bist_mux_delay_template) {
           variable_1 : input_net_transition;
           variable_2 : total_output_net_capacitance;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
               index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
        lu_table_template(RA2SHD_mux_mem_out_delay_template) {
           variable_1 : input_net_transition;
           variable_2 : total_output_net_capacitance;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
               index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
        lu_table_template(RA2SHD_mem_out_delay_template) {
           variable_1 : input_net_transition;
           variable_2 : total_output_net_capacitance;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
               index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
	lu_table_template(RA2SHD_bist_mux_slew_template) {
           variable_1 : total_output_net_capacitance;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
	lu_table_template(RA2SHD_mem_out_slew_template) {
           variable_1 : total_output_net_capacitance;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
	lu_table_template(RA2SHD_clk_setup_constraint_template) {
           variable_1 : related_pin_transition;
           variable_2 : constrained_pin_transition;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
               index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
	lu_table_template(RA2SHD_constraint_template) {
           variable_1 : related_pin_transition;
           variable_2 : constrained_pin_transition;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
               index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
        power_lut_template(RA2SHD_energy_template_clkslew_load) {
           variable_1 : input_transition_time;
           variable_2 : total_output_net_capacitance;
               index_1 ("1000, 1001");
               index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
        power_lut_template(RA2SHD_energy_template_sigslew_load) {
           variable_1 : input_transition_time;
           variable_2 : total_output_net_capacitance;
               index_1 ("1000, 1001");
               index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
        power_lut_template(RA2SHD_energy_template_load) {
           variable_1 : total_output_net_capacitance;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
        power_lut_template(RA2SHD_energy_template_clkslew) {
           variable_1 : input_transition_time;
               index_1 ("1000, 1001");
        }
        power_lut_template(RA2SHD_energy_template_sigslew) {
           variable_1 : input_transition_time;
               index_1 ("1000, 1001");
        }
	library_features(report_delay_calculation);
	type (RA2SHD_DATA) {
		base_type : array ;
		data_type : bit ;
		bit_width : 32;
		bit_from : 31;
		bit_to : 0 ;
		downto : true ;
	}
	type (RA2SHD_UPM) {
		base_type : array ;
		data_type : bit ;
		bit_width : 3;
		bit_from : 2;
		bit_to : 0 ;
		downto : true ;
	}
	type (RA2SHD_ADDRESS) {
		base_type : array ;
		data_type : bit ;
		bit_width : 11;
		bit_from : 10;
		bit_to : 0 ;
		downto : true ;
	}
cell(RA2SHD) {
	area		 : 518678.995;
	dont_use	 : TRUE;
	dont_touch	 : TRUE;
        interface_timing : TRUE;
	memory() {
		type : ram;
		address_width : 11;
		word_width : 32;
	}
        bus(QA)   {
                bus_type : RA2SHD_DATA;
		direction : output;
		max_capacitance : 0.860;
                memory_read() {
			address : AA;
		}
                timing() {
                        related_pin :   "CLKA" ;
                        timing_type : rising_edge ;
                        timing_sense : non_unate;
                        cell_rise(RA2SHD_mem_out_delay_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.800, 1.000");
                        index_2 ("0.000, 0.030, 0.060, 0.120, 0.280, 0.560, 0.860");
                        values ( \
                          "2.732, 2.777, 2.821, 2.910, 3.105, 3.394, 3.703", \
                          "2.746, 2.791, 2.835, 2.924, 3.119, 3.408, 3.717", \
                          "2.764, 2.808, 2.853, 2.941, 3.137, 3.425, 3.734", \
                          "2.799, 2.843, 2.888, 2.976, 3.172, 3.460, 3.770", \
                          "2.869, 2.914, 2.958, 3.047, 3.242, 3.531, 3.840", \
                          "3.010, 3.054, 3.098, 3.187, 3.382, 3.671, 3.980", \
                          "3.080, 3.124, 3.169, 3.257, 3.453, 3.741, 4.050" \
                        )
                        }
                        rise_transition(RA2SHD_mem_out_slew_template) {
                        index_1 ("0.000, 0.030, 0.060, 0.120, 0.280, 0.560, 0.860");
                        values ("0.048, 0.133, 0.219, 0.390, 0.845, 1.643, 2.498")
                        }
                        cell_fall(RA2SHD_mem_out_delay_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.800, 1.000");
                        index_2 ("0.000, 0.030, 0.060, 0.120, 0.280, 0.560, 0.860");
                        values ( \
                          "2.732, 2.777, 2.821, 2.910, 3.105, 3.394, 3.703", \
                          "2.746, 2.791, 2.835, 2.924, 3.119, 3.408, 3.717", \
                          "2.764, 2.808, 2.853, 2.941, 3.137, 3.425, 3.734", \
                          "2.799, 2.843, 2.888, 2.976, 3.172, 3.460, 3.770", \
                          "2.869, 2.914, 2.958, 3.047, 3.242, 3.531, 3.840", \
                          "3.010, 3.054, 3.098, 3.187, 3.382, 3.671, 3.980", \
                          "3.080, 3.124, 3.169, 3.257, 3.453, 3.741, 4.050" \
                        )
                        }
                        fall_transition(RA2SHD_mem_out_slew_template) {
                        index_1 ("0.000, 0.030, 0.060, 0.120, 0.280, 0.560, 0.860");
                        values ("0.059, 0.118, 0.177, 0.295, 0.610, 1.161, 1.752")
                        }
                }
        }
        bus(QB)   {
                bus_type : RA2SHD_DATA;
		direction : output;
		max_capacitance : 0.860;
                memory_read() {
			address : AB;
		}
                timing() {
                        related_pin :   "CLKB" ;
                        timing_type : rising_edge ;
                        timing_sense : non_unate;
                        cell_rise(RA2SHD_mem_out_delay_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.800, 1.000");
                        index_2 ("0.000, 0.030, 0.060, 0.120, 0.280, 0.560, 0.860");
                        values ( \
                          "2.732, 2.777, 2.821, 2.910, 3.105, 3.394, 3.703", \
                          "2.746, 2.791, 2.835, 2.924, 3.119, 3.408, 3.717", \
                          "2.764, 2.808, 2.853, 2.941, 3.137, 3.425, 3.734", \
                          "2.799, 2.843, 2.888, 2.976, 3.172, 3.460, 3.770", \
                          "2.869, 2.914, 2.958, 3.047, 3.242, 3.531, 3.840", \
                          "3.010, 3.054, 3.098, 3.187, 3.382, 3.671, 3.980", \
                          "3.080, 3.124, 3.169, 3.257, 3.453, 3.741, 4.050" \
                        )
                        }
                        rise_transition(RA2SHD_mem_out_slew_template) {
                        index_1 ("0.000, 0.030, 0.060, 0.120, 0.280, 0.560, 0.860");
                        values ("0.048, 0.133, 0.219, 0.390, 0.845, 1.643, 2.498")
                        }
                        cell_fall(RA2SHD_mem_out_delay_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.800, 1.000");
                        index_2 ("0.000, 0.030, 0.060, 0.120, 0.280, 0.560, 0.860");
                        values ( \
                          "2.732, 2.777, 2.821, 2.910, 3.105, 3.394, 3.703", \
                          "2.746, 2.791, 2.835, 2.924, 3.119, 3.408, 3.717", \
                          "2.764, 2.808, 2.853, 2.941, 3.137, 3.425, 3.734", \
                          "2.799, 2.843, 2.888, 2.976, 3.172, 3.460, 3.770", \
                          "2.869, 2.914, 2.958, 3.047, 3.242, 3.531, 3.840", \
                          "3.010, 3.054, 3.098, 3.187, 3.382, 3.671, 3.980", \
                          "3.080, 3.124, 3.169, 3.257, 3.453, 3.741, 4.050" \
                        )
                        }
                        fall_transition(RA2SHD_mem_out_slew_template) {
                        index_1 ("0.000, 0.030, 0.060, 0.120, 0.280, 0.560, 0.860");
                        values ("0.059, 0.118, 0.177, 0.295, 0.610, 1.161, 1.752")
                        }
                }
        }
        pin(CLKA)   {
		direction : input;
		capacitance : 0.131;
                clock : true;
                max_transition : 1.000;
                timing() {
                        related_pin     : "CLKB" ;
                        timing_type     : setup_rising ;
                        rise_constraint(RA2SHD_clk_setup_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.800, 1.000");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.800, 1.000");
                        values ( \
                          "3.179, 3.179, 3.179, 3.179, 3.179, 3.179, 3.179", \
                          "3.179, 3.179, 3.179, 3.179, 3.179, 3.179, 3.179", \
                          "3.179, 3.179, 3.179, 3.179, 3.179, 3.179, 3.179", \
                          "3.179, 3.179, 3.179, 3.179, 3.179, 3.179, 3.179", \
                          "3.179, 3.179, 3.179, 3.179, 3.179, 3.179, 3.179", \
                          "3.179, 3.179, 3.179, 3.179, 3.179, 3.179, 3.179", \
                          "3.179, 3.179, 3.179, 3.179, 3.179, 3.179, 3.179" \
                        )
                        }
                 }
                min_pulse_width_high : 0.196 ;
                min_pulse_width_low  : 0.319 ;
                min_period           : 4.023 ;


                internal_power(){
                        when : "(!CENA & ! \
                                 (WENA) \
                                ) \
                                 ";
                        rise_power(RA2SHD_energy_template_clkslew) {
                        index_1 ("0.000, 1.000");
                        values ("137.855, 137.855")
                        }
                        fall_power(RA2SHD_energy_template_clkslew) {
                        index_1 ("0.000, 1.000");
                        values ("0.000, 0.000")
                        }
                }
                internal_power(){
                        when : "(!CENA & \
                                 (WENA) \
                                ) \
                                 ";
                        rise_power(RA2SHD_energy_template_clkslew) {
                        index_1 ("0.000, 1.000");
                        values ("98.101, 98.101")
                        }
                        fall_power(RA2SHD_energy_template_clkslew) {
                        index_1 ("0.000, 1.000");
                        values ("0.000, 0.000")
                        }
                }
         internal_power(){
                 when : "(CENA)";
                        rise_power(RA2SHD_energy_template_clkslew) {
                        index_1 ("0.000, 1.000");
                        values ("0.015, 0.015")
                        }
                        fall_power(RA2SHD_energy_template_clkslew) {
                        index_1 ("0.000, 1.000");
                        values ("0.000, 0.000")
                        }
                }
        }

        pin(CENA)   {
                direction : input;
                capacitance : 0.008;
                timing() {
                        related_pin     : CLKA;
                        timing_type     : setup_rising ;
                        rise_constraint(RA2SHD_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.800, 1.000");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.800, 1.000");
                        values ( \
                          "1.188, 1.200, 1.214, 1.243, 1.301, 1.416, 1.474", \
                          "1.174, 1.186, 1.200, 1.229, 1.287, 1.402, 1.460", \
                          "1.156, 1.168, 1.182, 1.211, 1.269, 1.385, 1.442", \
                          "1.121, 1.133, 1.147, 1.176, 1.234, 1.349, 1.407", \
                          "1.051, 1.063, 1.077, 1.106, 1.164, 1.279, 1.337", \
                          "0.911, 0.922, 0.937, 0.966, 1.023, 1.139, 1.197", \
                          "0.840, 0.852, 0.866, 0.895, 0.953, 1.069, 1.126" \
                        )
                        }
                        fall_constraint(RA2SHD_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.800, 1.000");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.800, 1.000");
                        values ( \
                          "1.047, 1.056, 1.068, 1.090, 1.135, 1.225, 1.270", \
                          "1.033, 1.042, 1.053, 1.076, 1.121, 1.211, 1.256", \
                          "1.016, 1.025, 1.036, 1.058, 1.104, 1.194, 1.239", \
                          "0.981, 0.990, 1.001, 1.023, 1.068, 1.159, 1.204", \
                          "0.910, 0.919, 0.931, 0.953, 0.998, 1.088, 1.133", \
                          "0.770, 0.779, 0.790, 0.813, 0.858, 0.948, 0.993", \
                          "0.700, 0.709, 0.720, 0.743, 0.788, 0.878, 0.923" \
                        )
                        }
                } 
                timing() {
                        related_pin     : CLKA;
                        timing_type     : hold_rising ;
                        rise_constraint(RA2SHD_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.800, 1.000");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.800, 1.000");
                        values ( \
                          "0.450, 0.450, 0.450, 0.450, 0.450, 0.450, 0.450", \
                          "0.450, 0.450, 0.450, 0.450, 0.450, 0.450, 0.450", \
                          "0.450, 0.450, 0.450, 0.450, 0.450, 0.450, 0.450", \
                          "0.450, 0.450, 0.450, 0.450, 0.450, 0.450, 0.450", \
                          "0.450, 0.450, 0.450, 0.450, 0.450, 0.450, 0.450", \
                          "0.534, 0.523, 0.508, 0.479, 0.450, 0.450, 0.450", \
                          "0.604, 0.593, 0.578, 0.550, 0.492, 0.450, 0.450" \
                        )
                        }
                        fall_constraint(RA2SHD_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.800, 1.000");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.800, 1.000");
                        values ( \
                          "0.450, 0.450, 0.450, 0.450, 0.450, 0.450, 0.450", \
                          "0.450, 0.450, 0.450, 0.450, 0.450, 0.450, 0.450", \
                          "0.450, 0.450, 0.450, 0.450, 0.450, 0.450, 0.450", \
                          "0.450, 0.450, 0.450, 0.450, 0.450, 0.450, 0.450", \
                          "0.450, 0.450, 0.450, 0.450, 0.450, 0.450, 0.450", \
                          "0.450, 0.450, 0.450, 0.450, 0.450, 0.450, 0.450", \
                          "0.450, 0.450, 0.450, 0.450, 0.450, 0.450, 0.450" \
                        )
                        }
               }
        }
        pin(WENA){
                direction : input;
                capacitance : 0.008;
                timing() {
                        related_pin     : CLKA;
                        timing_type     : setup_rising ;
                        rise_constraint(RA2SHD_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.800, 1.000");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.800, 1.000");
                        values ( \
                          "1.217, 1.231, 1.247, 1.279, 1.345, 1.475, 1.540", \
                          "1.203, 1.216, 1.233, 1.265, 1.330, 1.461, 1.526", \
                          "1.186, 1.199, 1.215, 1.248, 1.313, 1.443, 1.508", \
                          "1.151, 1.164, 1.180, 1.213, 1.278, 1.408, 1.473", \
                          "1.081, 1.094, 1.110, 1.142, 1.208, 1.338, 1.403", \
                          "0.940, 0.953, 0.969, 1.002, 1.067, 1.198, 1.263", \
                          "0.870, 0.883, 0.899, 0.932, 0.997, 1.127, 1.192" \
                        )
                        }
                        fall_constraint(RA2SHD_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.800, 1.000");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.800, 1.000");
                        values ( \
                          "1.293, 1.303, 1.315, 1.339, 1.388, 1.486, 1.534", \
                          "1.279, 1.289, 1.301, 1.325, 1.374, 1.472, 1.520", \
                          "1.262, 1.271, 1.284, 1.308, 1.357, 1.454, 1.503", \
                          "1.226, 1.236, 1.248, 1.273, 1.322, 1.419, 1.468", \
                          "1.156, 1.166, 1.178, 1.203, 1.251, 1.349, 1.398", \
                          "1.016, 1.026, 1.038, 1.062, 1.111, 1.208, 1.257", \
                          "0.946, 0.955, 0.968, 0.992, 1.041, 1.138, 1.187" \
                        )
                        }
                } 
                timing() {
                        related_pin     : CLKA;
                        timing_type     : hold_rising ;
                        rise_constraint(RA2SHD_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.800, 1.000");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.800, 1.000");
                        values ( \
                          "0.450, 0.450, 0.450, 0.450, 0.450, 0.450, 0.450", \
                          "0.450, 0.450, 0.450, 0.450, 0.450, 0.450, 0.450", \
                          "0.450, 0.450, 0.450, 0.450, 0.450, 0.450, 0.450", \
                          "0.450, 0.450, 0.450, 0.450, 0.450, 0.450, 0.450", \
                          "0.450, 0.450, 0.450, 0.450, 0.450, 0.450, 0.450", \
                          "0.450, 0.450, 0.450, 0.450, 0.450, 0.450, 0.450", \
                          "0.450, 0.450, 0.450, 0.450, 0.450, 0.450, 0.450" \
                        )
                        }
                        fall_constraint(RA2SHD_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.800, 1.000");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.800, 1.000");
                        values ( \
                          "0.450, 0.450, 0.450, 0.450, 0.450, 0.450, 0.450", \
                          "0.450, 0.450, 0.450, 0.450, 0.450, 0.450, 0.450", \
                          "0.450, 0.450, 0.450, 0.450, 0.450, 0.450, 0.450", \
                          "0.450, 0.450, 0.450, 0.450, 0.450, 0.450, 0.450", \
                          "0.450, 0.450, 0.450, 0.450, 0.450, 0.450, 0.450", \
                          "0.450, 0.450, 0.450, 0.450, 0.450, 0.450, 0.450", \
                          "0.450, 0.450, 0.450, 0.450, 0.450, 0.450, 0.450" \
                        )
                        }
               }
        }
        bus(AA)   {
                bus_type : RA2SHD_ADDRESS;
                direction : input;
                capacitance : 0.017;
                timing() {
                        related_pin     : CLKA;
                        timing_type     : setup_rising ;
                        rise_constraint(RA2SHD_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.800, 1.000");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.800, 1.000");
                        values ( \
                          "0.948, 0.955, 0.965, 0.984, 1.023, 1.101, 1.139", \
                          "0.933, 0.941, 0.951, 0.970, 1.009, 1.087, 1.125", \
                          "0.916, 0.924, 0.933, 0.953, 0.991, 1.069, 1.108", \
                          "0.881, 0.889, 0.898, 0.918, 0.956, 1.034, 1.073", \
                          "0.811, 0.818, 0.828, 0.847, 0.886, 0.964, 1.002", \
                          "0.670, 0.678, 0.688, 0.707, 0.746, 0.823, 0.862", \
                          "0.600, 0.608, 0.617, 0.637, 0.676, 0.753, 0.792" \
                        )
                        }
                        fall_constraint(RA2SHD_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.800, 1.000");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.800, 1.000");
                        values ( \
                          "0.600, 0.608, 0.617, 0.636, 0.674, 0.749, 0.787", \
                          "0.586, 0.594, 0.603, 0.622, 0.660, 0.735, 0.773", \
                          "0.569, 0.576, 0.586, 0.605, 0.642, 0.718, 0.755", \
                          "0.534, 0.541, 0.551, 0.569, 0.607, 0.683, 0.720", \
                          "0.463, 0.471, 0.480, 0.499, 0.537, 0.612, 0.650", \
                          "0.323, 0.331, 0.340, 0.359, 0.396, 0.472, 0.510", \
                          "0.253, 0.260, 0.270, 0.289, 0.326, 0.402, 0.439" \
                        )
                        }
                } 
                timing() {
                        related_pin     : CLKA;
                        timing_type     : hold_rising ;
                        rise_constraint(RA2SHD_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.800, 1.000");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.800, 1.000");
                        values ( \
                          "0.220, 0.220, 0.220, 0.220, 0.220, 0.220, 0.220", \
                          "0.220, 0.220, 0.220, 0.220, 0.220, 0.220, 0.220", \
                          "0.220, 0.220, 0.220, 0.220, 0.220, 0.220, 0.220", \
                          "0.220, 0.220, 0.220, 0.220, 0.220, 0.220, 0.220", \
                          "0.220, 0.220, 0.220, 0.220, 0.220, 0.220, 0.220", \
                          "0.313, 0.305, 0.295, 0.276, 0.237, 0.220, 0.220", \
                          "0.383, 0.375, 0.366, 0.346, 0.307, 0.230, 0.220" \
                        )
                        }
                        fall_constraint(RA2SHD_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.800, 1.000");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.800, 1.000");
                        values ( \
                          "0.220, 0.220, 0.220, 0.220, 0.220, 0.220, 0.220", \
                          "0.220, 0.220, 0.220, 0.220, 0.220, 0.220, 0.220", \
                          "0.220, 0.220, 0.220, 0.220, 0.220, 0.220, 0.220", \
                          "0.224, 0.220, 0.220, 0.220, 0.220, 0.220, 0.220", \
                          "0.294, 0.287, 0.277, 0.259, 0.221, 0.220, 0.220", \
                          "0.435, 0.427, 0.418, 0.399, 0.361, 0.286, 0.248", \
                          "0.505, 0.498, 0.488, 0.469, 0.432, 0.356, 0.318" \
                        )
                        }
               }
                internal_power(){
                        when : "CENA";
                        rise_power(RA2SHD_energy_template_sigslew) {
                        index_1 ("0.000, 1.000");
                        values ("0.520, 0.520")
                        }
                        fall_power(RA2SHD_energy_template_sigslew) {
                        index_1 ("0.000, 1.000");
                        values ("0.520, 0.520")
                        }
                }
        }
        bus(DA)   {
                bus_type : RA2SHD_DATA;
                memory_write() {
                        address : AA;
                        clocked_on : "CLKA";
                }
                direction : input;
                capacitance : 0.001;
                timing() {
                        related_pin     : CLKA;
                        timing_type     : setup_rising ;
                        rise_constraint(RA2SHD_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.800, 1.000");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.800, 1.000");
                        values ( \
                          "0.844, 0.851, 0.859, 0.876, 0.910, 0.978, 1.012", \
                          "0.830, 0.837, 0.845, 0.862, 0.896, 0.964, 0.998", \
                          "0.812, 0.819, 0.828, 0.845, 0.879, 0.946, 0.980", \
                          "0.777, 0.784, 0.793, 0.810, 0.844, 0.911, 0.945", \
                          "0.707, 0.714, 0.722, 0.739, 0.773, 0.841, 0.875", \
                          "0.567, 0.574, 0.582, 0.599, 0.633, 0.701, 0.735", \
                          "0.497, 0.503, 0.512, 0.529, 0.563, 0.631, 0.664" \
                        )
                        }
                        fall_constraint(RA2SHD_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.800, 1.000");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.800, 1.000");
                        values ( \
                          "0.894, 0.905, 0.919, 0.947, 1.002, 1.114, 1.169", \
                          "0.880, 0.891, 0.905, 0.933, 0.988, 1.100, 1.155", \
                          "0.862, 0.874, 0.887, 0.915, 0.971, 1.082, 1.138", \
                          "0.827, 0.838, 0.852, 0.880, 0.936, 1.047, 1.103", \
                          "0.757, 0.768, 0.782, 0.810, 0.866, 0.977, 1.033", \
                          "0.617, 0.628, 0.642, 0.670, 0.725, 0.836, 0.892", \
                          "0.546, 0.558, 0.571, 0.599, 0.655, 0.766, 0.822" \
                        )
                        }
                } 
                timing() {
                        related_pin     : CLKA;
                        timing_type     : hold_rising ;
                        rise_constraint(RA2SHD_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.800, 1.000");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.800, 1.000");
                        values ( \
                          "0.450, 0.450, 0.450, 0.450, 0.450, 0.450, 0.450", \
                          "0.450, 0.450, 0.450, 0.450, 0.450, 0.450, 0.450", \
                          "0.450, 0.450, 0.450, 0.450, 0.450, 0.450, 0.450", \
                          "0.450, 0.450, 0.450, 0.450, 0.450, 0.450, 0.450", \
                          "0.450, 0.450, 0.450, 0.450, 0.450, 0.450, 0.450", \
                          "0.450, 0.450, 0.450, 0.450, 0.450, 0.450, 0.450", \
                          "0.494, 0.487, 0.479, 0.462, 0.450, 0.450, 0.450" \
                        )
                        }
                        fall_constraint(RA2SHD_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.800, 1.000");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.800, 1.000");
                        values ( \
                          "0.450, 0.450, 0.450, 0.450, 0.450, 0.450, 0.450", \
                          "0.450, 0.450, 0.450, 0.450, 0.450, 0.450, 0.450", \
                          "0.450, 0.450, 0.450, 0.450, 0.450, 0.450, 0.450", \
                          "0.450, 0.450, 0.450, 0.450, 0.450, 0.450, 0.450", \
                          "0.509, 0.498, 0.484, 0.456, 0.450, 0.450, 0.450", \
                          "0.649, 0.638, 0.624, 0.597, 0.541, 0.450, 0.450", \
                          "0.720, 0.709, 0.695, 0.667, 0.611, 0.500, 0.450" \
                        )
                        }
               }
        }
        pin(CLKB)   {
		direction : input;
		capacitance : 0.131;
                clock : true;
                max_transition : 1.000;
                timing() {
                        related_pin     : "CLKA" ;
                        timing_type     : setup_rising ;
                        rise_constraint(RA2SHD_clk_setup_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.800, 1.000");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.800, 1.000");
                        values ( \
                          "3.179, 3.179, 3.179, 3.179, 3.179, 3.179, 3.179", \
                          "3.179, 3.179, 3.179, 3.179, 3.179, 3.179, 3.179", \
                          "3.179, 3.179, 3.179, 3.179, 3.179, 3.179, 3.179", \
                          "3.179, 3.179, 3.179, 3.179, 3.179, 3.179, 3.179", \
                          "3.179, 3.179, 3.179, 3.179, 3.179, 3.179, 3.179", \
                          "3.179, 3.179, 3.179, 3.179, 3.179, 3.179, 3.179", \
                          "3.179, 3.179, 3.179, 3.179, 3.179, 3.179, 3.179" \
                        )
                        }
                 }
                min_pulse_width_high : 0.196 ;
                min_pulse_width_low  : 0.319 ;
                min_period           : 4.023 ;


                internal_power(){
                        when : "(!CENB & ! \
                                 (WENB) \
                                ) \
                                 ";
                        rise_power(RA2SHD_energy_template_clkslew) {
                        index_1 ("0.000, 1.000");
                        values ("137.855, 137.855")
                        }
                        fall_power(RA2SHD_energy_template_clkslew) {
                        index_1 ("0.000, 1.000");
                        values ("0.000, 0.000")
                        }
                }
                internal_power(){
                        when : "(!CENB & \
                                 (WENB) \
                                ) \
                                 ";
                        rise_power(RA2SHD_energy_template_clkslew) {
                        index_1 ("0.000, 1.000");
                        values ("98.101, 98.101")
                        }
                        fall_power(RA2SHD_energy_template_clkslew) {
                        index_1 ("0.000, 1.000");
                        values ("0.000, 0.000")
                        }
                }
         internal_power(){
                 when : "(CENB)";
                        rise_power(RA2SHD_energy_template_clkslew) {
                        index_1 ("0.000, 1.000");
                        values ("0.015, 0.015")
                        }
                        fall_power(RA2SHD_energy_template_clkslew) {
                        index_1 ("0.000, 1.000");
                        values ("0.000, 0.000")
                        }
                }
        }

        pin(CENB)   {
                direction : input;
                capacitance : 0.008;
                timing() {
                        related_pin     : CLKB;
                        timing_type     : setup_rising ;
                        rise_constraint(RA2SHD_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.800, 1.000");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.800, 1.000");
                        values ( \
                          "1.188, 1.200, 1.214, 1.243, 1.301, 1.416, 1.474", \
                          "1.174, 1.186, 1.200, 1.229, 1.287, 1.402, 1.460", \
                          "1.156, 1.168, 1.182, 1.211, 1.269, 1.385, 1.442", \
                          "1.121, 1.133, 1.147, 1.176, 1.234, 1.349, 1.407", \
                          "1.051, 1.063, 1.077, 1.106, 1.164, 1.279, 1.337", \
                          "0.911, 0.922, 0.937, 0.966, 1.023, 1.139, 1.197", \
                          "0.840, 0.852, 0.866, 0.895, 0.953, 1.069, 1.126" \
                        )
                        }
                        fall_constraint(RA2SHD_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.800, 1.000");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.800, 1.000");
                        values ( \
                          "1.047, 1.056, 1.068, 1.090, 1.135, 1.225, 1.270", \
                          "1.033, 1.042, 1.053, 1.076, 1.121, 1.211, 1.256", \
                          "1.016, 1.025, 1.036, 1.058, 1.104, 1.194, 1.239", \
                          "0.981, 0.990, 1.001, 1.023, 1.068, 1.159, 1.204", \
                          "0.910, 0.919, 0.931, 0.953, 0.998, 1.088, 1.133", \
                          "0.770, 0.779, 0.790, 0.813, 0.858, 0.948, 0.993", \
                          "0.700, 0.709, 0.720, 0.743, 0.788, 0.878, 0.923" \
                        )
                        }
                } 
                timing() {
                        related_pin     : CLKB;
                        timing_type     : hold_rising ;
                        rise_constraint(RA2SHD_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.800, 1.000");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.800, 1.000");
                        values ( \
                          "0.450, 0.450, 0.450, 0.450, 0.450, 0.450, 0.450", \
                          "0.450, 0.450, 0.450, 0.450, 0.450, 0.450, 0.450", \
                          "0.450, 0.450, 0.450, 0.450, 0.450, 0.450, 0.450", \
                          "0.450, 0.450, 0.450, 0.450, 0.450, 0.450, 0.450", \
                          "0.450, 0.450, 0.450, 0.450, 0.450, 0.450, 0.450", \
                          "0.534, 0.523, 0.508, 0.479, 0.450, 0.450, 0.450", \
                          "0.604, 0.593, 0.578, 0.550, 0.492, 0.450, 0.450" \
                        )
                        }
                        fall_constraint(RA2SHD_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.800, 1.000");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.800, 1.000");
                        values ( \
                          "0.450, 0.450, 0.450, 0.450, 0.450, 0.450, 0.450", \
                          "0.450, 0.450, 0.450, 0.450, 0.450, 0.450, 0.450", \
                          "0.450, 0.450, 0.450, 0.450, 0.450, 0.450, 0.450", \
                          "0.450, 0.450, 0.450, 0.450, 0.450, 0.450, 0.450", \
                          "0.450, 0.450, 0.450, 0.450, 0.450, 0.450, 0.450", \
                          "0.450, 0.450, 0.450, 0.450, 0.450, 0.450, 0.450", \
                          "0.450, 0.450, 0.450, 0.450, 0.450, 0.450, 0.450" \
                        )
                        }
               }
        }
        pin(WENB){
                direction : input;
                capacitance : 0.008;
                timing() {
                        related_pin     : CLKB;
                        timing_type     : setup_rising ;
                        rise_constraint(RA2SHD_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.800, 1.000");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.800, 1.000");
                        values ( \
                          "1.217, 1.231, 1.247, 1.279, 1.345, 1.475, 1.540", \
                          "1.203, 1.216, 1.233, 1.265, 1.330, 1.461, 1.526", \
                          "1.186, 1.199, 1.215, 1.248, 1.313, 1.443, 1.508", \
                          "1.151, 1.164, 1.180, 1.213, 1.278, 1.408, 1.473", \
                          "1.081, 1.094, 1.110, 1.142, 1.208, 1.338, 1.403", \
                          "0.940, 0.953, 0.969, 1.002, 1.067, 1.198, 1.263", \
                          "0.870, 0.883, 0.899, 0.932, 0.997, 1.127, 1.192" \
                        )
                        }
                        fall_constraint(RA2SHD_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.800, 1.000");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.800, 1.000");
                        values ( \
                          "1.293, 1.303, 1.315, 1.339, 1.388, 1.486, 1.534", \
                          "1.279, 1.289, 1.301, 1.325, 1.374, 1.472, 1.520", \
                          "1.262, 1.271, 1.284, 1.308, 1.357, 1.454, 1.503", \
                          "1.226, 1.236, 1.248, 1.273, 1.322, 1.419, 1.468", \
                          "1.156, 1.166, 1.178, 1.203, 1.251, 1.349, 1.398", \
                          "1.016, 1.026, 1.038, 1.062, 1.111, 1.208, 1.257", \
                          "0.946, 0.955, 0.968, 0.992, 1.041, 1.138, 1.187" \
                        )
                        }
                } 
                timing() {
                        related_pin     : CLKB;
                        timing_type     : hold_rising ;
                        rise_constraint(RA2SHD_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.800, 1.000");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.800, 1.000");
                        values ( \
                          "0.450, 0.450, 0.450, 0.450, 0.450, 0.450, 0.450", \
                          "0.450, 0.450, 0.450, 0.450, 0.450, 0.450, 0.450", \
                          "0.450, 0.450, 0.450, 0.450, 0.450, 0.450, 0.450", \
                          "0.450, 0.450, 0.450, 0.450, 0.450, 0.450, 0.450", \
                          "0.450, 0.450, 0.450, 0.450, 0.450, 0.450, 0.450", \
                          "0.450, 0.450, 0.450, 0.450, 0.450, 0.450, 0.450", \
                          "0.450, 0.450, 0.450, 0.450, 0.450, 0.450, 0.450" \
                        )
                        }
                        fall_constraint(RA2SHD_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.800, 1.000");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.800, 1.000");
                        values ( \
                          "0.450, 0.450, 0.450, 0.450, 0.450, 0.450, 0.450", \
                          "0.450, 0.450, 0.450, 0.450, 0.450, 0.450, 0.450", \
                          "0.450, 0.450, 0.450, 0.450, 0.450, 0.450, 0.450", \
                          "0.450, 0.450, 0.450, 0.450, 0.450, 0.450, 0.450", \
                          "0.450, 0.450, 0.450, 0.450, 0.450, 0.450, 0.450", \
                          "0.450, 0.450, 0.450, 0.450, 0.450, 0.450, 0.450", \
                          "0.450, 0.450, 0.450, 0.450, 0.450, 0.450, 0.450" \
                        )
                        }
               }
        }
        bus(AB)   {
                bus_type : RA2SHD_ADDRESS;
                direction : input;
                capacitance : 0.017;
                timing() {
                        related_pin     : CLKB;
                        timing_type     : setup_rising ;
                        rise_constraint(RA2SHD_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.800, 1.000");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.800, 1.000");
                        values ( \
                          "0.948, 0.955, 0.965, 0.984, 1.023, 1.101, 1.139", \
                          "0.933, 0.941, 0.951, 0.970, 1.009, 1.087, 1.125", \
                          "0.916, 0.924, 0.933, 0.953, 0.991, 1.069, 1.108", \
                          "0.881, 0.889, 0.898, 0.918, 0.956, 1.034, 1.073", \
                          "0.811, 0.818, 0.828, 0.847, 0.886, 0.964, 1.002", \
                          "0.670, 0.678, 0.688, 0.707, 0.746, 0.823, 0.862", \
                          "0.600, 0.608, 0.617, 0.637, 0.676, 0.753, 0.792" \
                        )
                        }
                        fall_constraint(RA2SHD_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.800, 1.000");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.800, 1.000");
                        values ( \
                          "0.600, 0.608, 0.617, 0.636, 0.674, 0.749, 0.787", \
                          "0.586, 0.594, 0.603, 0.622, 0.660, 0.735, 0.773", \
                          "0.569, 0.576, 0.586, 0.605, 0.642, 0.718, 0.755", \
                          "0.534, 0.541, 0.551, 0.569, 0.607, 0.683, 0.720", \
                          "0.463, 0.471, 0.480, 0.499, 0.537, 0.612, 0.650", \
                          "0.323, 0.331, 0.340, 0.359, 0.396, 0.472, 0.510", \
                          "0.253, 0.260, 0.270, 0.289, 0.326, 0.402, 0.439" \
                        )
                        }
                } 
                timing() {
                        related_pin     : CLKB;
                        timing_type     : hold_rising ;
                        rise_constraint(RA2SHD_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.800, 1.000");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.800, 1.000");
                        values ( \
                          "0.220, 0.220, 0.220, 0.220, 0.220, 0.220, 0.220", \
                          "0.220, 0.220, 0.220, 0.220, 0.220, 0.220, 0.220", \
                          "0.220, 0.220, 0.220, 0.220, 0.220, 0.220, 0.220", \
                          "0.220, 0.220, 0.220, 0.220, 0.220, 0.220, 0.220", \
                          "0.220, 0.220, 0.220, 0.220, 0.220, 0.220, 0.220", \
                          "0.313, 0.305, 0.295, 0.276, 0.237, 0.220, 0.220", \
                          "0.383, 0.375, 0.366, 0.346, 0.307, 0.230, 0.220" \
                        )
                        }
                        fall_constraint(RA2SHD_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.800, 1.000");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.800, 1.000");
                        values ( \
                          "0.220, 0.220, 0.220, 0.220, 0.220, 0.220, 0.220", \
                          "0.220, 0.220, 0.220, 0.220, 0.220, 0.220, 0.220", \
                          "0.220, 0.220, 0.220, 0.220, 0.220, 0.220, 0.220", \
                          "0.224, 0.220, 0.220, 0.220, 0.220, 0.220, 0.220", \
                          "0.294, 0.287, 0.277, 0.259, 0.221, 0.220, 0.220", \
                          "0.435, 0.427, 0.418, 0.399, 0.361, 0.286, 0.248", \
                          "0.505, 0.498, 0.488, 0.469, 0.432, 0.356, 0.318" \
                        )
                        }
               }
                internal_power(){
                        when : "CENB";
                        rise_power(RA2SHD_energy_template_sigslew) {
                        index_1 ("0.000, 1.000");
                        values ("0.520, 0.520")
                        }
                        fall_power(RA2SHD_energy_template_sigslew) {
                        index_1 ("0.000, 1.000");
                        values ("0.520, 0.520")
                        }
                }
        }
        bus(DB)   {
                bus_type : RA2SHD_DATA;
                memory_write() {
                        address : AB;
                        clocked_on : "CLKB";
                }
                direction : input;
                capacitance : 0.001;
                timing() {
                        related_pin     : CLKB;
                        timing_type     : setup_rising ;
                        rise_constraint(RA2SHD_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.800, 1.000");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.800, 1.000");
                        values ( \
                          "0.844, 0.851, 0.859, 0.876, 0.910, 0.978, 1.012", \
                          "0.830, 0.837, 0.845, 0.862, 0.896, 0.964, 0.998", \
                          "0.812, 0.819, 0.828, 0.845, 0.879, 0.946, 0.980", \
                          "0.777, 0.784, 0.793, 0.810, 0.844, 0.911, 0.945", \
                          "0.707, 0.714, 0.722, 0.739, 0.773, 0.841, 0.875", \
                          "0.567, 0.574, 0.582, 0.599, 0.633, 0.701, 0.735", \
                          "0.497, 0.503, 0.512, 0.529, 0.563, 0.631, 0.664" \
                        )
                        }
                        fall_constraint(RA2SHD_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.800, 1.000");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.800, 1.000");
                        values ( \
                          "0.894, 0.905, 0.919, 0.947, 1.002, 1.114, 1.169", \
                          "0.880, 0.891, 0.905, 0.933, 0.988, 1.100, 1.155", \
                          "0.862, 0.874, 0.887, 0.915, 0.971, 1.082, 1.138", \
                          "0.827, 0.838, 0.852, 0.880, 0.936, 1.047, 1.103", \
                          "0.757, 0.768, 0.782, 0.810, 0.866, 0.977, 1.033", \
                          "0.617, 0.628, 0.642, 0.670, 0.725, 0.836, 0.892", \
                          "0.546, 0.558, 0.571, 0.599, 0.655, 0.766, 0.822" \
                        )
                        }
                } 
                timing() {
                        related_pin     : CLKB;
                        timing_type     : hold_rising ;
                        rise_constraint(RA2SHD_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.800, 1.000");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.800, 1.000");
                        values ( \
                          "0.450, 0.450, 0.450, 0.450, 0.450, 0.450, 0.450", \
                          "0.450, 0.450, 0.450, 0.450, 0.450, 0.450, 0.450", \
                          "0.450, 0.450, 0.450, 0.450, 0.450, 0.450, 0.450", \
                          "0.450, 0.450, 0.450, 0.450, 0.450, 0.450, 0.450", \
                          "0.450, 0.450, 0.450, 0.450, 0.450, 0.450, 0.450", \
                          "0.450, 0.450, 0.450, 0.450, 0.450, 0.450, 0.450", \
                          "0.494, 0.487, 0.479, 0.462, 0.450, 0.450, 0.450" \
                        )
                        }
                        fall_constraint(RA2SHD_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.800, 1.000");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.800, 1.000");
                        values ( \
                          "0.450, 0.450, 0.450, 0.450, 0.450, 0.450, 0.450", \
                          "0.450, 0.450, 0.450, 0.450, 0.450, 0.450, 0.450", \
                          "0.450, 0.450, 0.450, 0.450, 0.450, 0.450, 0.450", \
                          "0.450, 0.450, 0.450, 0.450, 0.450, 0.450, 0.450", \
                          "0.509, 0.498, 0.484, 0.456, 0.450, 0.450, 0.450", \
                          "0.649, 0.638, 0.624, 0.597, 0.541, 0.450, 0.450", \
                          "0.720, 0.709, 0.695, 0.667, 0.611, 0.500, 0.450" \
                        )
                        }
               }
        }

        cell_leakage_power : 2.89E-3;
}
}
